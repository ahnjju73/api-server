<?xml version="1.0" encoding= "UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >

<mapper namespace="bikelabs.commons.bikes">

    <select id="countAllBikeList" parameterType="hmap" resultType="int">
        <if test="search_client_id != null and search_client_id != '' and search_client_id != 'undefined'">
            select count(*)
              from (select b.*
                      from bikes b
                           join (select *
                                    from com_comm_bikes
                                    where 1 = 1
                                    <if test="car_model != null and car_model != '' and car_model != 'undefined'">
                                      and comm_nm like concat('%', #{car_model}, '%')
                                    </if>) commb on b.car_model = commb.comm_cd
                     where bike_id != (select val from system_parameters where parameter_no = 0)
                       and deleted_at is null
                     <if test="is_bikemaster != null and is_bikemaster != '' and is_bikemaster != 'undefined'">
                       and is_bm = #{is_bikemaster}
                     </if>
                     <if test="payer_type != null and payer_type != '' and payer_type != 'undefined'">
                       and payer_types = #{payer_type}
                     </if>
                     <if test="search_name != null and search_name != '' and search_name != 'undefined'">
                       and (
                            vim_num like concat('%', #{search_name}, '%')
                            or `number` like concat('%', #{search_name}, '%')
                           )
                     </if>) b
                   join leases l on b.bike_no = l.bike_no
                   join clients c on l.client_no = c.client_no
                                 and c.client_id = #{search_client_id}
        </if>
        <if test="search_client_id == null or search_client_id == '' or search_client_id == 'undefined'">
            select count(*)
              from bikes b
                   join (select *
                           from com_comm_bikes
                          where 1 = 1
                          <if test="car_model != null and car_model != '' and car_model != 'undefined'">
                            and comm_nm like concat('%', #{car_model}, '%')
                          </if>) commb on b.car_model = commb.comm_cd
             where bike_id != (select val from system_parameters where parameter_no = 0)
             <if test="is_bikemaster != null and is_bikemaster != '' and is_bikemaster != 'undefined'">
               and is_bm = #{is_bikemaster}
             </if>
             <if test="type == 'delete'">
               and deleted_at is not null
             </if>
             <if test="payer_type != null and payer_type != '' and payer_type != 'undefined'">
               and payer_types = #{payer_type}
             </if>
             <if test="type == null or type == '' or type == 'undefined'">
               and deleted_at is null
             </if>
             <if test="search_name != null and search_name != '' and search_name != 'undefined'">
               and (
                   vim_num like concat('%', #{search_name}, '%')
                   or `number` like concat('%', #{search_name}, '%')
                   )
             </if>

        </if>
    </select>

    <select id="fetchBikesListByClientId" parameterType="hmap" resultType="hmap">
        select bike_id,
               vim_num,
               ms.number,
               is_bm,
               payer_types,
               car_model as car_model_code,
               comm_nm as car_model,
               color,
               years,
               ms.lease_id,
               ms.client_id,
               g.*,
               ci.name as client_name,
               if(ms.lease_id is null, false, true) as used
        from (select c.client_id,
                     c.client_no,
                     l.lease_id,
                     b.*,
                     c.group_no
               from (select *
                       from clients
                      where client_id = #{search_client_id}
                    ) c
                    join leases l on c.client_no = l.client_no
                    join bikes b on l.bike_no = b.bike_no
                    join (select *
                            from com_comm_bikes
                           where 1 = 1
                           <if test="car_model != null and car_model != '' and car_model != 'undefined'">
                             and comm_nm like concat('%', #{car_model}, '%')
                           </if>) commb on b.car_model = commb.comm_cd
              where 1 = 1
                and b.deleted_at is null
                and bike_id != (select val from system_parameters where parameter_no = 0)
                <if test="is_bikemaster != null and is_bikemaster != '' and is_bikemaster != 'undefined'">
                and is_bm = #{is_bikemaster}
                </if>
                <if test="payer_type != null and payer_type != '' and payer_type != 'undefined'">
                and payer_types = #{payer_type}
                </if>
                <if test="search_name != null and search_name != '' and search_name != 'undefined'">
                and (
                vim_num like concat('%', #{search_name}, '%')
                or `number` like concat('%', #{search_name}, '%')
                )
                </if>
                <if test="next_token != null and next_token != '' and next_token != 'undefined'">
                and bike_id <![CDATA[ < ]]> #{next_token}
                </if>
              order by b.bike_id desc limit 30) ms
          join groups g on g.group_no = ms.group_no
          join com_comm_bikes commb on ms.car_model = commb.comm_cd
          left outer join client_info ci on ms.client_no = ci.client_no
         order by bike_id desc
    </select>

    <select id="fetchBikesList" parameterType="hmap" resultType="hmap">
        select bike_id,
               vim_num,
               bm.number,
               payer_types,
               is_bm,
               car_model as car_model_code,
               comm_nm as car_model,
               color,
               years,
               ls.lease_id,
               c.client_id,
               ci.name as client_name,
               if(l.lease_no is null, false, true) as used,
               g.*
        from (select *
                from bikes b
                     join (select *
                             from com_comm_bikes
                            where 1 = 1
                            <if test="car_model != null and car_model != '' and car_model != 'undefined'">
                              and comm_nm like concat('%', #{car_model}, '%')
                            </if>) commb on b.car_model = commb.comm_cd
               where 1 = 1
                 and bike_id != (select val from system_parameters where parameter_no = 0)
               <if test="is_bikemaster != null and is_bikemaster != '' and is_bikemaster != 'undefined'">
                 and is_bm = #{is_bikemaster}
               </if>
               <if test="payer_type != null and payer_type != '' and payer_type != 'undefined'">
                 and payer_types = #{payer_type}
               </if>
               <if test="search_name != null and search_name != '' and search_name != 'undefined'">
                 and (
                        vim_num like concat('%', #{search_name}, '%')
                        or `number` like concat('%', #{search_name}, '%')
                     )
               </if>
               <if test="next_token != null and next_token != '' and next_token != 'undefined'">
                 and bike_id <![CDATA[ < ]]> #{next_token}
               </if>
               <if test="type == 'delete'">
                 and deleted_at is not null
               </if>
               <if test="type == null or type == '' or type == 'undefined'">
                 and deleted_at is null
               </if>
               order by bike_no desc limit 30) bm
              left outer join leases ls on bm.bike_no = ls.bike_no
              <if test="search_client_id != null and search_client_id != '' and search_client_id != 'undefined'">
              join (select *
                      from clients
                     where client_id = #{search_client_id}) c on ls.client_no = c.client_no
              </if>
              <if test="search_client_id == null or search_client_id == '' or search_client_id == 'undefined'">
              left outer join clients c on ls.client_no = c.client_no
              </if>
              left outer join groups g on c.group_no = g.group_no
              left outer join client_info ci on c.client_no = ci.client_no
              left outer join leases l on bm.bike_no = l.bike_no
         order by bm.bike_no desc
    </select>

    <select id="countAllBikeListByNoLease" parameterType="hmap" resultType="int">
        <if test="search_client_id != null and search_client_id != '' and search_client_id != 'undefined'">
            select count(*)
              from (select *
                      from bikes
                     where bike_no not in (select bike_no from leases)
                       and reg_num is not null
                       and price is not null
                       and company_name is not null
                       <if test="is_bikemaster != null and is_bikemaster != '' and is_bikemaster != 'undefined'">
                       and is_bm = #{is_bikemaster}
                       </if>
                       and bike_id != (select val from system_parameters where parameter_no = 0)
                     <if test="search_name != null and search_name != '' and search_name != 'undefined'">
                        and (
                        vim_num like concat('%', #{search_name}, '%')
                        or `number` like concat('%', #{search_name}, '%')
                        )
                    </if>
                    <if test="search_bike_id != null and search_bike_id != '' and search_bike_id != 'undefined'">
                        and bike_id like concat('%', #{search_bike_id}, '%')
                    </if>
                    <if test="search_number != null and search_number != '' and search_number != 'undefined'">
                        and `number` like concat('%', #{search_number}, '%')
                    </if>
                    <if test="search_vim != null and search_vim != '' and search_vim != 'undefined'">
                        and vim_num like concat('%', #{search_vim}, '%')
                    </if>) b
                   join leases l on b.bike_no = l.bike_no
                   join clients c on l.client_no = c.client_no
                                 and c.client_id = #{search_client_id}
        </if>
        <if test="search_client_id == null or search_client_id == '' or search_client_id == 'undefined'">
            select count(*) from bikes
             where bike_no not in (select bike_no from leases)
               and reg_num is not null
               and price is not null
               and company_name is not null
            <if test="search_bike_id != null and search_bike_id != '' and search_bike_id != 'undefined'">
                and bike_id like concat('%', #{search_bike_id}, '%')
            </if>
            <if test="search_number != null and search_number != '' and search_number != 'undefined'">
                and `number` like concat('%', #{search_number}, '%')
            </if>
            <if test="search_vim != null and search_vim != '' and search_vim != 'undefined'">
                and vim_num like concat('%', #{search_vim}, '%')
            </if>
        </if>
    </select>

    <select id="fetchBikesListByNoLease" parameterType="hmap" resultType="hmap">
        select bike_id,
               vim_num,
               bm.number,
               car_model as car_model_code,
               commb.comm_nm as car_model,
               color,
               years,
               ls.lease_id,
               c.client_id,
               ci.name as client_name
          from (select *
                  from bikes b
                 where bike_no not in (select bike_no from leases)
                 <if test="is_bikemaster != null and is_bikemaster != '' and is_bikemaster != 'undefined'">
                   and is_bm = #{is_bikemaster}
                 </if>
                   and bike_id != (select val from system_parameters where parameter_no = 0)
                   and reg_num is not null
                   and price is not null
                   and company_name is not null
                 <if test="search_name != null and search_name != '' and search_name != 'undefined'">
                   and (
                        vim_num like concat('%', #{search_name}, '%')
                        or `number` like concat('%', #{search_name}, '%')
                       )
                </if>
                <if test="search_bike_id != null and search_bike_id != '' and search_bike_id != 'undefined'">
                    and bike_id like concat('%', #{search_bike_id}, '%')
                </if>
                <if test="search_number != null and search_number != '' and search_number != 'undefined'">
                    and `number` like concat('%', #{search_number}, '%')
                </if>
                <if test="search_vim != null and search_vim != '' and search_vim != 'undefined'">
                    and vim_num like concat('%', #{search_vim}, '%')
                </if>
                <if test="next_token != null and next_token != '' and next_token != 'undefined'">
                   and bike_id <![CDATA[ < ]]> #{next_token}
                </if>
                 order by bike_no desc limit 30) bm
                join com_comm_bikes commb on bm.car_model = commb.comm_cd
                left outer join leases ls on bm.bike_no = ls.bike_no
                <if test="search_client_id != null and search_client_id != '' and search_client_id != 'undefined'">
                    join (select *
                    from clients
                    where client_id = #{search_client_id}) c on ls.client_no = c.client_no
                </if>
                <if test="search_client_id == null or search_client_id == '' or search_client_id == 'undefined'">
                    left outer join clients c on ls.client_no = c.client_no
                </if>
                left outer join client_info ci on c.client_no = ci.client_no
            order by bm.bike_no desc
    </select>

    <select id="countAllBikesRidable" parameterType="hmap" resultType="int">
        select count(*)
          from (select *
                  from bikes b
                 where bike_no in (select bike_no
                                     from leases
                                    where status = '550-003')
                   and bike_id != (select val from system_parameters where parameter_no = 0)
                   and reg_num is not null
                   and price is not null
                   and company_name is not null
                   and rider_no is null
                   <if test="search_name != null and search_name != '' and search_name != 'undefined'">
                   and (
                    vim_num like concat('%', #{search_name}, '%')
                    or `number` like concat('%', #{search_name}, '%')
                    or bike_id like concat('%', #{search_name}, '%')
                    or vim_num like concat('%', #{search_name}, '%')
                    or bike_id like concat('%', #{search_name}, '%')
                   )
                   </if>
                   <if test="search_bike_id != null and search_bike_id != '' and search_bike_id != 'undefined'">
                   and bike_id like concat('%', #{search_bike_id}, '%')
                   </if>
                   <if test="search_vim != null and search_vim != '' and search_vim != 'undefined'">
                   and vim_num like concat('%', #{search_vim}, '%')
                   </if>) bm
    </select>

    <select id="fetchBikesRidable" parameterType="hmap" resultType="hmap">
        select bike_id,
               vim_num,
               bm.number,
               car_model as car_model_code,
               commb.comm_nm as car_model,
               color,
               years,
               ls.lease_id,
               li.start_dt,
               li.end_dt,
               ls.contract_type,
               c.client_id,
               ci.name as client_name
          from (select *
                  from bikes b
                 where bike_id != (select val
                                    from system_parameters
                                   where parameter_no = 0)
                  -- and reg_num is not null
                  -- and price is not null
                  -- and company_name is not null
                  and rider_no is null
                  <if test="search_name != null and search_name != '' and search_name != 'undefined'">
                  and (
                    vim_num like concat('%', #{search_name}, '%')
                    or `number` like concat('%', #{search_name}, '%')
                    or bike_id like concat('%', #{search_name}, '%')
                    or vim_num like concat('%', #{search_name}, '%')
                    or bike_id like concat('%', #{search_name}, '%')
                  )
                  </if>
                  <if test="search_bike_id != null and search_bike_id != '' and search_bike_id != 'undefined'">
                  and bike_id like concat('%', #{search_bike_id}, '%')
                  </if>
                  <if test="search_vim != null and search_vim != '' and search_vim != 'undefined'">
                  and vim_num like concat('%', #{search_vim}, '%')
                  </if>
                  <if test="next_token != null and next_token != '' and next_token != 'undefined'">
                  and bike_id <![CDATA[ < ]]> #{next_token}
                  </if>
                order by bike_no desc limit 30) bm
               join com_comm_bikes commb on bm.car_model = commb.comm_cd
               left outer join leases ls on bm.bike_no = ls.bike_no
               left outer join lease_info li on ls.lease_no = li.lease_no
               left outer join clients c on ls.client_no = c.client_no
               left outer join client_info ci on c.client_no = ci.client_no
        order by bm.bike_no desc
    </select>

</mapper>