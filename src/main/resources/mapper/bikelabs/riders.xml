<?xml version="1.0" encoding= "UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >

<mapper namespace="bikelabs.riders">

    <select id="countAllRiders" parameterType="hmap" resultType="int">
        select count(*)
          from riders r
          join rider_info ri on r.rider_no = ri.rider_no
         where 1 = 1
        <if test="condition_status != null and condition_status != '' and condition_status != 'undefined'">
           and status = #{condition_status}
        </if>
        <if test="condition != null and condition != '' and condition != 'undefined'">
           and (
           email like concat('%', #{condition}, '%')
           or phone like concat('%', #{condition}, '%')
           or rider_id like concat('%', #{condition}, '%')
           or ri.name like concat('%', #{condition}, '%')
           )
        </if>
    </select>

    <select id="countAllRidersVerified" parameterType="hmap" resultType="int">
        select count(*)
          from riders r
          join rider_info ri on ri.rider_no = r.rider_no
         where verified_request_at is not null
        <if test="condition_status != null and condition_status != '' and condition_status != 'undefined'">
           and status = #{condition_status}
        </if>
        <if test="condition != null and condition != '' and condition != 'undefined'">
           and (
           email like concat('%', #{condition}, '%')
           or phone like concat('%', #{condition}, '%')
           or rider_id like concat('%', #{condition}, '%')
           or name like concat('%', #{condition}, '%')
           )
        </if>
    </select>

    <select id="countAllRidersLeaseRequested" parameterType="hmap" resultType="int">
        select count(*)
          from riders r
          join rider_info ri on ri.rider_no = r.rider_no
          join rider_demand_leases rdl on rdl.rider_no = r.rider_no
        <if test="condition_status != null and condition_status != '' and condition_status != 'undefined'">
           and status = #{condition_status}
        </if>
        <if test="status != null and status != '' and status != 'undefined'">
            and rdl.demand_lease_status = #{status}
        </if>
        <if test="condition != null and condition != '' and condition != 'undefined'">
           and (
           email like concat('%', #{condition}, '%')
           or phone like concat('%', #{condition}, '%')
           or rider_id like concat('%', #{condition}, '%')
           or name like concat('%', #{condition}, '%')
            )
        </if>
    </select>

    <select id="fetchRidersLeaseRequested" parameterType="hmap" resultType="hmap">
        select rider_id,
               status as rider_status,
               email as rider_email,
               phone as rider_phone,
               r.name as rider_name,
               r.rider_no,
               r.created_at,
               r.uuid as edp_id,
               r.front_ssn as birth_date,
               if(b.rider_no is null, 0, bikes) bikes_count
        from (select rid.*,
                     ri.name
              from riders rid
              join rider_info ri on ri.rider_no = rid.rider_no
             where 1 = 1
            <if test="next_token != null and next_token != '' and next_token != 'undefined'">
               and rider_id <![CDATA[ < ]]> #{next_token}
            </if>
            <if test="condition_status != null and condition_status != '' and condition_status != 'undefined'">
               and status = #{condition_status}
            </if>
            <if test="condition != null and condition != '' and condition != 'undefined'">
               and (
                email like concat('%', #{condition}, '%')
                or phone like concat('%', #{condition}, '%')
                or rider_id like concat('%', #{condition}, '%')
                or name like concat('%', #{condition}, '%')
                )
            </if>
             order by rider_id desc) r
             join rider_demand_leases rdl on rdl.rider_no = r.rider_no
                                      <if test="status != null and status != '' and status != 'undefined'">
                                         and rdl.demand_lease_status = #{status}
                                      </if>
             left outer join (select rider_no,
                                     count(*) bikes
                                from bikes
                               group by rider_no) b on r.rider_no = b.rider_no
        order by rider_id desc limit 30
    </select>

    <select id="fetchRidersVerified" parameterType="hmap" resultType="hmap">
        select rider_id,
               status as rider_status,
               email as rider_email,
               phone as rider_phone,
               r.name as rider_name,
               r.rider_no,
               r.created_at,
               r.uuid as edp_id,
               r.front_ssn as birth_date,
               if(b.rider_no is null, 0, bikes) bikes_count
        from (select rid.*,
                     ri.name
              from riders rid
              join rider_info ri on rid.rider_no = ri.rider_no
              where verified_request_at is not null
            <if test="next_token != null and next_token != '' and next_token != 'undefined'">
                and rider_id <![CDATA[ < ]]> #{next_token}
            </if>
            <if test="condition_status != null and condition_status != '' and condition_status != 'undefined'">
                and status = #{condition_status}
            </if>
            <if test="condition != null and condition != '' and condition != 'undefined'">
                and (
                email like concat('%', #{condition}, '%')
                or phone like concat('%', #{condition}, '%')
                or rider_id like concat('%', #{condition}, '%')
                or name like concat('%', #{condition}, '%')
                )
            </if>
              order by rider_id desc limit 30) r
                 left outer join (select rider_no,
                                         count(*) bikes
                                  from bikes
                                  group by rider_no) b on r.rider_no = b.rider_no
        order by rider_id desc
    </select>

    <select id="fetchRiders" parameterType="hmap" resultType="hmap">
        select rider_id,
               status as rider_status,
               email as rider_email,
               phone as rider_phone,
               r.name as rider_name,
               r.rider_no,
               r.created_at,
               r.uuid as edp_id,
               r.front_ssn as birth_date,
               if(b.rider_no is null, 0, bikes) bikes_count
          from (select rid.*,
                       ri.name
                  from riders rid
                  join rider_info ri on rid.rider_no = ri.rider_no
                 where verified = 'VERIFIED'
                 <if test="next_token != null and next_token != '' and next_token != 'undefined'">
                   and rider_id <![CDATA[ < ]]> #{next_token}
                 </if>
                 <if test="condition_status != null and condition_status != '' and condition_status != 'undefined'">
                   and status = #{condition_status}
                 </if>
                 <if test="condition != null and condition != '' and condition != 'undefined'">
                   and (
                    email like concat('%', #{condition}, '%')
                    or phone like concat('%', #{condition}, '%')
                    or rider_id like concat('%', #{condition}, '%')
                    or name like concat('%', #{condition}, '%')
                   )
                 </if>
                 order by rider_id desc limit 30) r
               left outer join (select rider_no,
                                       count(*) bikes
                                  from bikes
                                 group by rider_no) b on r.rider_no = b.rider_no
         order by rider_id desc
    </select>

    <select id="countAllRiderListByBike" parameterType="hmap" resultType="int">
       select count(*)
         from bikes bi
         join riders r on bi.rider_no = r.rider_no
         join rider_info ri on r.rider_no = ri.rider_no
         join com_comm_bikes ccb on bi.car_model = ccb.comm_cd
         join com_comm_manuf ccm on ccb.manuf_no = ccm.manuf_no
         left outer join leases l on bi.bike_no = l.bike_no
         left outer join clients c on l.client_no = c.client_no
        where bike_id != (select val
                            from system_parameters
                           where parameter_no = 0)
        <if test="car_num != null and car_num != '' and car_num != 'undefined'">
          and number like concat('%', #{car_num}, '%')
        </if>
        <if test="rider_name != null and rider_name != '' and rider_name != 'undefined'">
          and ri.name like concat('%', #{rider_name}, '%')
        </if>
        <if test="client_id != null and client_id != '' and client_id != 'undefined'">
          and c.client_id = #{client_id}
        </if>
    </select>

    <select id="fetchRiderListByBike" parameterType="hmap" resultType="hmap">
        select b.bike_id,
               vim_num as bike_vim_num,
               b.number as bike_number,
               b.car_model as bike_car_model_code,
               b.comm_nm as bike_car_model,
               b.manuf as bike_manufacturer,
               b.color,
               b.usable,
               b.payer_types,
               b.rider_status,
               b.rider_start_at,
               b.rider_end_at,
               b.rider_request_at,
               b.rider_approval_at,
               b.rider_id,
               b.email as rider_email,
               b.phone as rider_phone,
               b.uuid as edp_id,
               b.front_ssn as birth_date,
               b.rider_name,
               l.lease_id,
               l.contract_type,
               c.client_id,
               ci.name as client_name
          from (select bi.*,
                       r.rider_id,
                       r.email,
                       r.phone,
                       r.uuid,
                       r.front_ssn,
                       ccb.comm_nm,
                       ccm.manuf,
                       ri.name as rider_name
                  from bikes bi
                  join riders r on bi.rider_no = r.rider_no
                  join rider_info ri on r.rider_no = ri.rider_no
                  join com_comm_bikes ccb on bi.car_model = ccb.comm_cd
                  join com_comm_manuf ccm on ccb.manuf_no = ccm.manuf_no
                  left outer join leases l on bi.bike_no = l.bike_no
                  left outer join clients c on l.client_no = c.client_no
                  where bi.rider_no is not null
                   and bike_id != (select val
                                     from system_parameters
                                    where parameter_no = 0)
                 <if test="next_token != null and next_token != '' and next_token != 'undefined'">
                   and bike_id <![CDATA[ < ]]> #{next_token}
                 </if>
                 <if test="car_num != null and car_num != '' and car_num != 'undefined'">
                   and number like concat('%', #{car_num}, '%')
                 </if>
                 <if test="rider_name != null and rider_name != '' and rider_name != 'undefined'">
                   and ri.name like concat('%', #{rider_name}, '%')
                 </if>
                 <if test="client_id != null and client_id != '' and client_id != 'undefined'">
                   and c.client_id = #{client_id}
                 </if>order by bike_id desc limit 30) b
          left outer join leases l on b.bike_no = l.bike_no
          left outer join clients c on l.client_no = c.client_no
          left outer join client_info ci on c.client_no = ci.client_no
    </select>

    <select id="fetchRiderBikeRequests" parameterType="hmap" resultType="hmap">
        select b.bike_id,
               b.rider_request_at,
               b.vim_num,
               b.number as bike_number,
               b.car_model as car_model_code,
               ccb.comm_nm as car_model,
               ccm.manuf as manufacturer,
               ccb.volume,
               b.color as bike_color,
               b.years,
               b.usable,
               b.payer_types,
               rider_status,
               rider_start_at,
               rider_end_at,
               r.rider_id,
               r.email as rider_email,
               r.phone as rider_phone,
               r.uuid as edp_id,
               r.front_ssn as birth_date,
               ri.name as rider_name,
               l.lease_id,
               l.contract_type,
               c.client_id,
               ci.name as client_name
          from bikes b
               join riders r on b.rider_no = r.rider_no
               join rider_info ri on r.rider_no = ri.rider_no
               join com_comm_bikes ccb on b.car_model = ccb.comm_cd
               join com_comm_manuf ccm on ccb.manuf_no = ccm.manuf_no
               left outer join leases l on b.bike_no = l.bike_no
               left outer join clients c on l.client_no = c.client_no
               left outer join client_info ci on c.client_no = ci.client_no
         where rider_status = '1'
         order by rider_request_at desc
    </select>



</mapper>